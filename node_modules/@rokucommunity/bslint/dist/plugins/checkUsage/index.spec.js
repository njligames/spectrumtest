"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const Linter_1 = require("../../Linter");
const util_1 = require("../../util");
const index_1 = require("./index");
function pad(n) {
    return n > 9 ? `${n}` : `0${n}`;
}
function fmtDiagnostics(diagnostics) {
    return diagnostics
        .filter((d) => d.severity && d.severity < 4)
        .sort((a, b) => a.range.start.line - b.range.start.line)
        .map((d) => `${pad(d.range.start.line + 1)}:${d.code}:${d.message}`.replace('\\', '/')); // Win to nix path
}
describe('checkUsage', () => {
    let linter;
    let lintContext;
    const project1 = {
        rootDir: 'test/project1'
    };
    beforeEach(() => {
        linter = new Linter_1.default();
        linter.builder.plugins.add({
            name: 'test',
            afterProgramCreate: (program) => {
                lintContext = util_1.createContext(program);
                const checkUsage = new index_1.default(lintContext);
                program.plugins.add(checkUsage);
            }
        });
    });
    it('detects component refered by name in main.brs', async () => {
        const diagnostics = await linter.run(Object.assign(Object.assign({}, project1), { files: [
                'source/main.brs',
                'components/parent.brs', 'components/parent.xml'
            ], rules: {} }));
        const actual = fmtDiagnostics(diagnostics);
        const expected = [];
        chai_1.expect(actual).deep.equal(expected);
    });
    it('detects component refered as child', async () => {
        const diagnostics = await linter.run(Object.assign(Object.assign({}, project1), { files: [
                'source/main.brs',
                'components/parent.brs', 'components/parent.xml',
                'components/child1.brs', 'components/child1.xml',
                'components/child2.brs', 'components/child2.xml'
            ], rules: {} }));
        const actual = fmtDiagnostics(diagnostics);
        const expected = [
            `01:LINT4002:Script 'components/child2.brs' does not seem to be used`,
            `02:LINT4001:Component 'components/child2.xml' does not seem to be used`
        ];
        chai_1.expect(actual).deep.equal(expected);
    });
});
//# sourceMappingURL=index.spec.js.map