import { BscFile, BsDiagnostic, FunctionExpression, OnGetCodeActionsEvent, AALiteralExpression } from 'brighterscript';
import { RuleAAComma } from '../..';
import { PluginContext } from '../../util';
export default class CodeStyle {
    private lintContext;
    name: 'codeStyle';
    constructor(lintContext: PluginContext);
    onGetCodeActions(event: OnGetCodeActionsEvent): void;
    afterFileValidate(file: BscFile): void;
    validateAAStyle(aa: AALiteralExpression, aaCommaStyle: RuleAAComma, diagnostics: (Omit<BsDiagnostic, 'file'>)[]): void;
    validateFunctionStyle(fun: FunctionExpression, diagnostics: (Omit<BsDiagnostic, 'file'>)[]): void;
    getFunctionReturns(fun: FunctionExpression): boolean;
}
/**
 * Collect indexes of non-inline AA members
 */
export declare function collectWrappingAAMembersIndexes(aa: AALiteralExpression): number[];
