"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const reflection_1 = require("../../astUtils/reflection");
const visitors_1 = require("../../astUtils/visitors");
const Statement_1 = require("../../parser/Statement");
function plugin() {
    return {
        name: 'removePrint',
        // note: it is normally not recommended to modify the AST too much at this stage,
        // because if the plugin runs in a language-server context it could break intellisense
        afterFileParse: (file) => {
            if (!(0, reflection_1.isBrsFile)(file)) {
                return;
            }
            // visit functions bodies and replace `PrintStatement` nodes with `EmptyStatement`
            for (const func of file.parser.references.functionExpressions) {
                func.body.walk((0, visitors_1.createVisitor)({
                    PrintStatement: (statement) => new Statement_1.EmptyStatement()
                }), {
                    walkMode: visitors_1.WalkMode.visitStatements
                });
            }
        }
    };
}
exports.default = plugin;
//# sourceMappingURL=removePrint.js.map